{"version":3,"sources":["Components/AppToolbar/AppToolbar.js","Components/Country/Country.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","drawer","Object","defineProperty","breakpoints","up","flexShrink","appBar","marginLeft","concat","menuButton","marginRight","spacing","display","drawerPaper","nested","paddingLeft","links","textDecoration","color","active","action","selected","ButtonAppBar","props","container","classes","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","mobileOpen","setMobileOpen","_React$useState3","_React$useState4","open","setOpen","_React$useState5","_React$useState6","setSelected","_React$useState7","name","path","_React$useState8","drawerList","setDrawerList","handleDrawerToggle","react_default","a","createElement","List","ListItem","button","to","component","Link","CardMedia","style","height","image","title","Divider","subheader","ListSubheader","className","onClick","event","ListItemIcon","Send_default","ListItemText","primary","Drafts_default","MoveToInbox_default","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","disablePadding","StarBorder_default","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Menu_default","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","ModalProps","keepMounted","xsDown","Country","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","countries","handleChange","bind","assertThisInitialized","searchCountry","e","setState","target","value","_this2","preventDefault","axios","get","headers","X-RapidAPI-Host","X-RapidAPI-Key","then","response","data","catch","gutterBottom","noValidate","autoComplete","onSubmit","Grid","item","xs","TextField","id","label","margin","onChange","fullWidth","Button","type","size","length","marginTop","map","index","md","lg","key","Card","CardContent","m","population","toString","replace","capital","currencies","currency","Component","content","flexGrow","padding","toolbar","mixins","Home","App","react_router_dom","AppToolbar","react_router","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fbd38607.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  links: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  active: {\n    backgroundColor: theme.palette.action.selected,\n  }\n}));\n\nfunction ButtonAppBar(props) {\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState(null);\n  const list = [\n    [\n      name => 'Country',\n      path => '/'\n    ]\n  ];\n  const [drawerList, setDrawerList] = React.useState(list)\n\n  function handleClick() {\n    setOpen(!open);\n    setDrawerList(drawerList);\n  }\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  function handleListItemClick(event, item) {\n    setSelected(item);\n  }\n\n  const drawer = (\n    <div>\n      <List>\n        <ListItem button to=\"/\" component={Link}>\n          <CardMedia\n            style={{ width: '100%', height: '50px' }}\n            image=\"https://upload.wikimedia.org/wikipedia/en/3/3f/2011.Cerner.logo.png\"\n            title=\"logo\"\n          />\n        </ListItem>\n      </List>\n      <Divider />\n      <List\n        component=\"nav\"\n        subheader={<ListSubheader component=\"div\">Public API</ListSubheader>}\n        className={classes.root}\n        >\n        <ListItem\n          button\n          component={Link}\n          to=\"/country\"\n          selected={ selected === '/country' }\n          onClick={event => handleListItemClick(event, '/country')}\n          >\n          <ListItemIcon>\n            <SendIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Country\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Drafts\" />\n        </ListItem>\n        <ListItem button onClick={handleClick}>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Inbox\" />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button className={classes.nested}>\n              <ListItemIcon>\n                <StarBorder />\n              </ListItemIcon>\n              <ListItemText primary=\"Starred\" />\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            MyApp\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n\nexport default ButtonAppBar;","import React from 'react';\nimport axios from 'axios';\nimport './../../App.css';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nexport default class Country extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Establish our state\n    this.state = {\n      name: '',\n      countries: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.searchCountry = this.searchCountry.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  searchCountry(event) {\n    event.preventDefault();\n    if (this.state.name !== '') {\n      axios.get('https://restcountries-v1.p.rapidapi.com/name/' + this.state.name, {\n        headers: {\n          'X-RapidAPI-Host': 'restcountries-v1.p.rapidapi.com',\n          'X-RapidAPI-Key': 'b247b756e2mshd1f681d7c4d09d9p11f61ejsnc4a1fde3adf7'\n        }\n      }).then((response) => {\n        this.setState({ countries: response.data });\n      }).catch(() => {\n        this.setState({ countries: [] })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h6\" gutterBottom>\n          Find Country Information\n        </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            Enter keyword to get country detail information\n        </Typography>\n        <form noValidate autoComplete=\"off\" onSubmit={this.searchCountry}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"standard-name\"\n                label=\"Country Name\"\n                value={this.state.name}\n                margin=\"normal\"\n                variant=\"outlined\"\n                onChange={this.handleChange}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"large\" onClick={this.searchCountry}>\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n        {\n          this.state.countries.length ? (\n            <Typography variant=\"h6\" gutterBottom style={{ marginTop: '20px' }}>\n              Search Result\n            </Typography>\n          ) : null\n        }\n        <Grid container spacing={2}>\n          { this.state.countries.map((data, index) => (\n            <Grid item xs={12} md={6} lg={4} key={index}>\n              <Card>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {data.name}\n                  </Typography>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\" m={0}>\n                    Population: {data.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") }\n                  </Typography>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\" m={0}>\n                    Capital: {data.capital}\n                  </Typography>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\" m={0}>\n                    Currency: <span> </span>\n                    { data.currencies.map((currency, index) => (\n                      <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"span\" key={index}>\n                      { currency }\n                      </Typography>\n                    )) }\n                  </Typography>\n                  \n                </CardContent>\n              </Card>\n            </Grid>\n          )) }\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport AppBar from './Components/AppToolbar/AppToolbar';\nimport Country from './Components/Country/Country';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Router>\n      <div className={classes.root}>\n        <AppBar />\n        <div className={classes.content}>\n          <div className={classes.toolbar}></div>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/country\" component={Country} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nconst Home = () => (\n  <div>\n    <h3>Home Page</h3>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}